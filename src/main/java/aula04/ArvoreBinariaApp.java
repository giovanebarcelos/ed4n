package aula04;
/*
1. CRUD em uma √Årvore Bin√°ria de Busca (BST)
üìå Enunciado: Implemente os m√©todos para inserir, remover,
 alterar e consultar valores em uma √°rvore bin√°ria de busca (BST).
 */

public class ArvoreBinariaApp {
    public static void main(String[] args) {
        ArvoreBinaria arvore = new ArvoreBinaria();

        int[] numeros = { 50, 30, 70, 20, 40, 60, 80};

        for (int numero: numeros){
            arvore.incluir(numero);
        }

        System.out.println("√Årvore Original");
        arvore.imprimir();

        arvore.excluir(40);
        System.out.println("√Årvore depois da exclus√£o do n√∫mero 40");
        arvore.imprimir();

        arvore.alterar(30, 35);
        System.out.println("√Årvore depois da altera√ß√£o do 30 para 35");
        arvore.imprimir();

        int numero = arvore.consultar(60);
        System.out.printf("\nN√∫mero consultado %d", numero);
    }
}
